# Generated by Django 5.0.6 on 2025-10-03 04:14

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('bio', models.TextField()),
                ('location', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('linkedin_url', models.URLField(blank=True)),
                ('github_url', models.URLField(blank=True)),
                ('portfolio_url', models.URLField(blank=True)),
                ('behance_url', models.URLField(blank=True)),
                ('dribbble_url', models.URLField(blank=True)),
                ('years_of_experience', models.IntegerField(default=0)),
                ('availability_status', models.CharField(default='Open to opportunities', max_length=100)),
                ('fun_facts', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, size=None)),
                ('design_philosophy', models.TextField(blank=True)),
                ('career_goals', models.TextField(blank=True)),
                ('embedding', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, null=True, size=1536)),
            ],
            options={
                'verbose_name': 'Personal Information',
                'verbose_name_plural': 'Personal Information',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('detailed_case_study', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('web', 'Web Design'), ('mobile', 'Mobile App'), ('ux', 'UX Research'), ('branding', 'Branding'), ('prototype', 'Prototype'), ('other', 'Other')], max_length=20)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('featured_image', models.URLField(blank=True)),
                ('gallery_images', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), blank=True, default=list, size=None)),
                ('video_url', models.URLField(blank=True)),
                ('prototype_url', models.URLField(blank=True)),
                ('live_url', models.URLField(blank=True)),
                ('github_url', models.URLField(blank=True)),
                ('client', models.CharField(blank=True, max_length=100)),
                ('role', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=50)),
                ('team_size', models.IntegerField(default=1)),
                ('problem_statement', models.TextField(blank=True)),
                ('solution_overview', models.TextField(blank=True)),
                ('key_achievements', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, size=None)),
                ('technologies_used', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('featured', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('embedding', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, null=True, size=1536)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('design', 'Design Tools'), ('research', 'Research Methods'), ('technical', 'Technical Skills'), ('soft', 'Soft Skills'), ('process', 'Process & Methods')], max_length=20)),
                ('proficiency', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20)),
                ('years_of_experience', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True)),
                ('embedding', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, null=True, size=1536)),
                ('projects', models.ManyToManyField(blank=True, related_name='skills_used', to='content.project')),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('organization', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('experience_type', models.CharField(choices=[('work', 'Work Experience'), ('education', 'Education'), ('volunteer', 'Volunteer'), ('freelance', 'Freelance'), ('personal', 'Personal Project')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('current', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('key_achievements', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, size=None)),
                ('embedding', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, null=True, size=1536)),
                ('skills_gained', models.ManyToManyField(blank=True, related_name='experiences', to='content.skill')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=100)),
                ('author_title', models.CharField(max_length=200)),
                ('author_company', models.CharField(blank=True, max_length=100)),
                ('author_image', models.URLField(blank=True)),
                ('content', models.TextField()),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5)),
                ('featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('embedding', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, null=True, size=1536)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testimonials', to='content.project')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
